{"version":3,"sources":["env.ts","App.tsx","Swagger.js","index.tsx"],"names":["Env","getApiProtocol","protocol","window","location","protocolOverride","process","REACT_APP_NEON_API_HOST_PROTOCOL","length","String","getApiHostName","hostName","host","hostOverride","REACT_APP_NEON_API_HOST","getApiHost","App","useLayoutEffect","frameElement","ResizeObserver","style","height","setAttribute","document","body","overflow","resizeObserver","entries","cr","contentRect","observe","disconnect","className","spec","swaggerJSON","docExpansion","requestInterceptor","req","url","URL","port","href","ReactDOM","render","getElementById"],"mappings":"4zoCAOMA,EAAkB,CACtBC,eAAgB,WACd,IAAIC,EAAgB,UAAMC,OAAOC,SAASF,UACpCG,EAAuCC,gtCAAYC,iCAIzD,MAHgC,kBAArBF,GAAkCA,EAAiBG,OAAS,IACrEN,EAAWO,OAAOJ,IAEd,GAAN,OAAUH,IAEZQ,eAAgB,WACd,IAAIC,EAAgB,UAAMR,OAAOC,SAASQ,MACpCC,EAAmCP,gtCAAYQ,wBAIrD,MAH4B,kBAAjBD,GAA8BA,EAAaL,OAAS,IAC7DG,EAAWF,OAAOI,IAEd,GAAN,OAAUF,IAEZI,WAAY,WACV,MAAM,GAAN,OAAUf,EAAIC,iBAAd,aAAmCD,EAAIU,oBAI5BV,I,gCCWAgB,EA/BO,WAwBpB,OAvBAC,2BAAgB,WACd,GAAKd,OAAOe,aAAZ,CAIA,GAA8B,oBAAnBC,eAIT,OAHChB,OAAOe,aAA6BE,MAAMC,OAAS,QACnDlB,OAAOe,aAA6BI,aAAa,YAAa,YAC/DnB,OAAOoB,SAASC,KAAKJ,MAAMK,SAAW,UAIxC,IAAMC,EAAiB,IAAIP,gBAAe,SAACQ,GAAoB,IAAD,uBAC5D,YAAkBA,EAAlB,+CAA2B,CAAC,IACpBC,EADmB,QACRC,YAChB1B,OAAOe,aAA6BE,MAAMC,OAA3C,UAAuDO,EAAGP,OAAS,GAAnE,OAH0D,sFAO9D,OADAK,EAAeI,QAAQ3B,OAAOoB,SAASC,MAChC,WACLE,EAAeK,kBAIjB,yBAAKC,UAAU,+BC7BUC,ED8BTC,EC7BlB,kBAAC,IAAD,CAAWD,KAAMA,EACfE,aAAa,OACbC,mBAAoB,SAACC,GACnB,IAAMC,EAAM,IAAIC,IAAIF,EAAIC,KAIxB,OAHAA,EAAIpC,SAAWF,EAAIC,iBACnBqC,EAAI1B,KAAOZ,EAAIU,iBACf4B,EAAIE,KAAO,GACJ,eACFH,EADL,CAEEC,IAAKA,EAAIG,YAVW,IAACR,GCD7BS,IAASC,OAAO,kBAAC,EAAD,MAASpB,SAASqB,eAAe,W","file":"static/js/main.a24ae72d.chunk.js","sourcesContent":["\nexport interface ApiHostEnv {\n  getApiProtocol: () => string;\n  getApiHostName: () => string;\n  getApiHost: () => string;\n};\n\nconst Env: ApiHostEnv = {\n  getApiProtocol: (): string => {\n    let protocol: string = `${window.location.protocol}`;\n    const protocolOverride: string | undefined = process.env.REACT_APP_NEON_API_HOST_PROTOCOL;\n    if (typeof protocolOverride === \"string\" && (protocolOverride.length > 0)) {\n      protocol = String(protocolOverride);\n    }\n    return `${protocol}`;\n  },\n  getApiHostName: (): string => {\n    let hostName: string = `${window.location.host}`;\n    const hostOverride: string | undefined = process.env.REACT_APP_NEON_API_HOST;\n    if (typeof hostOverride === \"string\" && (hostOverride.length > 0)) {\n      hostName = String(hostOverride);\n    }\n    return `${hostName}`;\n  },\n  getApiHost: (): string => {\n    return `${Env.getApiProtocol()}//${Env.getApiHostName()}`;\n  }\n};\n\nexport default Env;\n","import React, { useLayoutEffect } from \"react\";\nimport { getSwaggerUI } from \"./Swagger\";\n\nimport \"swagger-ui-react/swagger-ui.css\"\nimport \"./App.css\";\nimport \"./swagger-theme-material.css\";\n\nimport swaggerJSON from \"./swagger.json\";\n\nconst App: React.FC = () => {\n  useLayoutEffect(() => {\n    if (!window.frameElement) {\n      return;\n    }\n    // @ts-ignore\n    if (typeof ResizeObserver !== \"function\") {\n      (window.frameElement as HTMLElement).style.height = \"100vh\";\n      (window.frameElement as HTMLElement).setAttribute(\"scrolling\", \"yes\");\n      window.document.body.style.overflow = \"scroll\";\n      return;\n    }\n    // @ts-ignore\n    const resizeObserver = new ResizeObserver((entries: any[]) => {\n      for (let entry of entries) {\n        const cr = entry.contentRect;\n        (window.frameElement as HTMLElement).style.height = `${cr.height + 60}px`;\n      }\n    });\n    resizeObserver.observe(window.document.body);\n    return () => {\n      resizeObserver.disconnect();\n    };\n  });\n  return (\n    <div className=\"neon-data-api-docs-swagger\">\n      {getSwaggerUI(swaggerJSON)}\n    </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport SwaggerUI from \"swagger-ui-react\"\n\nimport Env from \"./env\";\n\nexport const getSwaggerUI = (spec) => (\n  <SwaggerUI spec={spec}\n    docExpansion=\"list\"\n    requestInterceptor={(req) => {\n      const url = new URL(req.url);\n      url.protocol = Env.getApiProtocol();\n      url.host = Env.getApiHostName();\n      url.port = \"\";\n      return {\n        ...req,\n        url: url.href,\n      };\n    }}\n  />\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}