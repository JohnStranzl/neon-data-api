{"version":3,"sources":["../../../node_modules/graphql-language-service-utils/esm sync /^.*/.js$","../../../node_modules/graphql-language-service-utils/esm sync /^.*/.json$","../../../node_modules/graphql-language-service-utils/esm lazy /^.*/.js$/ groupOptions: {} namespace object","../../../node_modules/graphql-language-service-utils/esm lazy /^.*/.json$/ groupOptions: {} namespace object","env.ts","GraphiQL.js","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","webpackEmptyContext","webpackAsyncContext","Promise","then","webpackEmptyAsyncContext","Env","getApiProtocol","protocol","window","location","protocolOverride","process","REACT_APP_NEON_API_HOST_PROTOCOL","length","String","getApiHostName","hostName","host","hostOverride","REACT_APP_NEON_API_HOST","getApiHost","graphQLFetcher","graphQLParams","init","method","headers","body","JSON","stringify","fetch","response","json","ReactDOM","render","defaultVariableEditorOpen","fetcher","defaultQuery","variables","document","getElementById"],"mappings":"uJAAA,IAAIA,EAAM,CACT,aAAc,GACd,YAAa,GACb,4BAA6B,GAC7B,aAAc,GACd,+BAAgC,IAIjC,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,kBC1BpB,SAASY,EAAoBb,GAC5B,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEPQ,EAAoBL,KAAO,WAAa,MAAO,IAC/CK,EAAoBH,QAAUG,EAC9BF,EAAOC,QAAUC,EACjBA,EAAoBZ,GAAK,K,oBCRzB,IAAIH,EAAM,CACT,aAAc,GACd,YAAa,GACb,4BAA6B,GAC7B,aAAc,GACd,+BAAgC,IAGjC,SAASgB,EAAoBd,GAC5B,OAAOe,QAAQL,UAAUM,MAAK,WAC7B,IAAIb,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAIP,OAAOF,EADEL,EAAIE,OAIfc,EAAoBN,KAAO,WAC1B,OAAOC,OAAOD,KAAKV,IAEpBgB,EAAoBb,GAAK,IACzBU,EAAOC,QAAUE,G,kBCxBjB,SAASG,EAAyBjB,GAGjC,OAAOe,QAAQL,UAAUM,MAAK,WAC7B,IAAIX,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,KAGRY,EAAyBT,KAAO,WAAa,MAAO,IACpDS,EAAyBP,QAAUO,EACnCN,EAAOC,QAAUK,EACjBA,EAAyBhB,GAAK,K,wICLxBiB,EAAkB,CACtBC,eAAgB,WACd,IAAIC,EAAgB,UAAMC,OAAOC,SAASF,UACpCG,EAAuCC,gtCAAYC,iCAIzD,MAHgC,kBAArBF,GAAkCA,EAAiBG,OAAS,IACrEN,EAAWO,OAAOJ,IAEd,GAAN,OAAUH,IAEZQ,eAAgB,WACd,IAAIC,EAAgB,UAAMR,OAAOC,SAASQ,MACpCC,EAAmCP,gtCAAYQ,wBAIrD,MAH4B,kBAAjBD,GAA8BA,EAAaL,OAAS,IAC7DG,EAAWF,OAAOI,IAEd,GAAN,OAAUF,IAEZI,WAAY,WACV,MAAM,GAAN,OAAUf,EAAIC,iBAAd,aAAmCD,EAAIU,oBAI5BV,ICWTgB,EAAiB,SAACC,GACtB,IAAMC,EAAO,CACXC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAEvB,OAAOO,IAAM,GAAD,OAAIxB,EAAIe,aAAR,YAAgCG,GACzCpB,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,W,cC1C/BC,IAASC,OD8CP,kBAAC,IAAD,CACEC,2BAAyB,EACzBC,QAASd,EACTe,aAhDc,0rBAiDdC,UArBkB,+CC7BSC,SAASC,eAAe,W","file":"static/js/main.4a9064b1.chunk.js","sourcesContent":["var map = {\n\t\"./Range.js\": 55,\n\t\"./file.js\": 66,\n\t\"./getASTNodeAtPosition.js\": 65,\n\t\"./index.js\": 23,\n\t\"./validateWithCustomRules.js\": 72\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 230;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 231;","var map = {\n\t\"./Range.js\": 55,\n\t\"./file.js\": 66,\n\t\"./getASTNodeAtPosition.js\": 65,\n\t\"./index.js\": 23,\n\t\"./validateWithCustomRules.js\": 72\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 232;\nmodule.exports = webpackAsyncContext;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 233;","\nexport interface ApiHostEnv {\n  getApiProtocol: () => string;\n  getApiHostName: () => string;\n  getApiHost: () => string;\n};\n\nconst Env: ApiHostEnv = {\n  getApiProtocol: (): string => {\n    let protocol: string = `${window.location.protocol}`;\n    const protocolOverride: string | undefined = process.env.REACT_APP_NEON_API_HOST_PROTOCOL;\n    if (typeof protocolOverride === \"string\" && (protocolOverride.length > 0)) {\n      protocol = String(protocolOverride);\n    }\n    return `${protocol}`;\n  },\n  getApiHostName: (): string => {\n    let hostName: string = `${window.location.host}`;\n    const hostOverride: string | undefined = process.env.REACT_APP_NEON_API_HOST;\n    if (typeof hostOverride === \"string\" && (hostOverride.length > 0)) {\n      hostName = String(hostOverride);\n    }\n    return `${hostName}`;\n  },\n  getApiHost: (): string => {\n    return `${Env.getApiProtocol()}//${Env.getApiHostName()}`;\n  }\n};\n\nexport default Env;\n","import React from \"react\";\nimport GraphiQL from \"graphiql\";\nimport fetch from \"isomorphic-fetch\";\n\nimport Env from \"./env\";\n\nconst defaultQuery = `\n# Type queries into this side of the screen,\n# and you will see intelligent typeaheads aware\n# of the current GraphQL type schema,\n# live syntax, and validation errors highlighted\n# within the text.\n\n# Here's a query for retrieving a single data product\n# as specified by the query variables window below.\nquery Product($productCode: String!) {\n  product (productCode: $productCode) {\n    productCode\n    productName\n    productDescription\n    productScienceTeam\n    productHasExpanded\n    productBasicDescription\n    productExpandedDescription\n    productPublicationFormatType\n    keywords\n    themes\n    siteCodes {\n      siteCode\n      availableMonths\n    }\n  }\n}\n`;\nconst defaultVariables = `\n{\n  \"productCode\": \"DP1.00001.001\"\n}\n`;\n\nconst graphQLFetcher = (graphQLParams) => {\n  const init = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(graphQLParams),\n  };\n  return fetch(`${Env.getApiHost()}/graphql`, init)\n    .then(response => response.json());\n};\n\nexport const getGraphiQL = () => (\n  <GraphiQL\n    defaultVariableEditorOpen\n    fetcher={graphQLFetcher}\n    defaultQuery={defaultQuery}\n    variables={defaultVariables}\n  />\n);\n","import ReactDOM from \"react-dom\";\nimport { getGraphiQL } from \"./GraphiQL\";\nimport \"./App.css\";\nimport \"graphiql/graphiql.css\";\n\nReactDOM.render(getGraphiQL(), document.getElementById(\"root\"));\n"],"sourceRoot":""}